{"version":3,"sources":["TxClient.ts","ParamsProvider.tsx","Calculator.ts","Result.tsx","Form.tsx","PrefetchedForm.tsx","theme.ts","Prefetching.tsx","index.tsx"],"names":["TerminologyClient","endpoint","client","this","axios","create","baseURL","headers","Accept","url","a","get","response","data","expansion","contains","TX_ENDPOINT","HDL_LOINC_CODE","DIABETES_VALUE_SET_URI","CARDIOVASCULAR_VALUE_SET_URI","AF_VALUE_SET_URI","BLOOD_PRESSURE_CODINGS","system","code","SMOKER_CODINGS","NON_SMOKER_CODES","STOPPED_SMOKING_CODES","CURRENT_SMOKER_CODES","CVDParamsContext","createContext","ParamsProvider","props","sourceData","useMemo","getSourceData","params","then","extractParams","Provider","value","children","getPatient","patient","getCholesterol","getBloodPressure","getHistory","getFamilyHistory","getSmoker","cholesterol","bloodPressure","history","familyHistory","smoker","read","request","id","bundle","entry","filter","resource","map","codeCondition","coding","join","tcHdlData","tcHdl","birthSex","age","systolicBP","historyInValueSet","familyHistoryInValueSet","diabetes","af","extension","extensions","e","length","valueCode","gender","PatientGenderKind","_female","_male","moment","diff","birthDate","total","hdl","effectiveDateTime","totalValue","valueQuantity","totalUnits","unit","hdlValue","hdlUnits","totalCholesterol","systolicComponent","component","find","validCoding","c","correctUnit","valueSetUri","txClient","expandValueSet","diabetesCodings","some","condition","dc","validCodings","conditions","conditionCoding","smokerStatus","valueCodeableConcept","includes","maleCoefficients","baseSurvival","ageMean","nzdMean","sbpMean","tcHdlMean","cAge","cEthnicity","maori","pacific","indian","asian","cNZDep","cExSmoker","cSmoker","cFamilyHist","cAF","cDiabetes","cSBP","cTcHdl","cOBPLM","cOLLM","cOATM","cAgeDiabetes","cAgeSBP","cObplmSBP","femaleCoefficients","NewCalculator","ethnicity","nzDep","obplm","ollm","oatm","coeff","undefined","tcHdlOffset","ageOffset","Math","max","nzDepOffset","sbpOffset","sumOfCoeffs","pow","exp","Result","result","formatted","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","Card","variant","sx","p","Stack","direction","alignItems","Typography","flexGrow","color","textAlign","justifyContent","mt","Button","startIcon","Save","onClick","observation","resourceType","status","ObservationStatusKind","_final","display","subject","reference","catch","console","error","Form","initialParams","useState","setBirthSex","setAge","setTotalCholesterol","setHdl","setSystolicBP","setNzDep","setEthnicity","setSmoker","setFamilyHistory","setAf","setDiabetes","setObplm","setOllm","setOatm","Container","maxWidth","pb","spacing","my","mb","FormControl","fullWidth","InputLabel","Select","labelId","label","required","onChange","target","autoFocus","MenuItem","TextField","type","parseInt","inputProps","min","parseFloat","FormControlLabel","control","Switch","checked","PrefetchedForm","PrefetchedCVDParams","useContext","usePromise","theme","createTheme","palette","primary","main","secondary","red","A400","Prefetching","py","CircularProgress","rootElement","document","querySelector","SMART","init","iss","redirectUri","clientId","scope","render","ThemeProvider","CssBaseline","fallback"],"mappings":"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","file":"static/js/main.4d98816b.chunk.js","sourcesContent":["import { ICoding, IValueSet } from \"@ahryman40k/ts-fhir-types/lib/R4\";\nimport axios, { AxiosInstance } from \"axios\";\n\nexport default class TerminologyClient {\n  readonly client: AxiosInstance;\n\n  constructor(endpoint: string) {\n    this.client = axios.create({\n      baseURL: endpoint,\n      headers: {\n        Accept: \"application/fhir+json\",\n      },\n    });\n  }\n\n  async expandValueSet(url: string): Promise<ICoding[]> {\n    const response = await this.client.get<IValueSet>(\n      `/ValueSet/$expand?url=${url}`\n    );\n    return response.data.expansion?.contains ?? [];\n  }\n}\n","import Client from \"fhirclient/lib/Client\";\nimport { createContext, useMemo } from \"react\";\nimport {\n  IBundle,\n  ICondition,\n  IFamilyMemberHistory,\n  IObservation,\n  IPatient,\n  PatientGenderKind,\n} from \"@ahryman40k/ts-fhir-types/lib/R4\";\nimport moment from \"moment\";\nimport { NewCVDRiskCalculatorParams } from \"./Calculator\";\nimport TerminologyClient from \"./TxClient\";\n\ninterface Props {\n  client: Client;\n  children: any;\n}\n\ninterface SourceData {\n  patient: IPatient;\n  cholesterol: IObservation[];\n  bloodPressure: IObservation[];\n  history: ICondition[];\n  familyHistory: IFamilyMemberHistory[];\n  smoker: IObservation[];\n}\n\nexport interface PrefilledParams extends NewCVDRiskCalculatorParams {\n  birthSex?: string | null;\n  age?: number | null; // age in years\n  ethnicity?: string | null;\n  totalCholesterol?: number | null;\n  hdl?: number | null;\n  systolicBP?: number | null;\n  nzDep?: number | null;\n  smoker?: string | null; // snomed code of smoking status\n  familyHistory?: boolean;\n  af?: boolean;\n  diabetes?: boolean;\n  obplm?: boolean;\n  ollm?: boolean;\n  oatm?: boolean;\n}\n\nconst BIRTH_SEX_URL =\n  \"http://hl7.org.au/fhir/StructureDefinition/au-sexassignedatbirth\";\n\nconst TX_ENDPOINT = \"https://r4.ontoserver.csiro.au/fhir\";\n\nconst SNOMED_URI = \"http://snomed.info/sct\";\nconst TOTAL_CHOLESTEROL_LOINC_CODE = \"14647-2\";\nconst HDL_LOINC_CODE = \"14646-4\";\nconst DIABETES_VALUE_SET_URI =\n  \"http://snomed.info/sct?fhir_vs=ecl/%3C%3C%2073211009%20\";\nconst CARDIOVASCULAR_VALUE_SET_URI =\n  \"http://snomed.info/sct?fhir_vs=ecl/%3C%3C%2049601007%20\";\nconst AF_VALUE_SET_URI =\n  \"http://snomed.info/sct?fhir_vs=ecl/%3C%3C%2049436004%20\";\n\nconst BLOOD_PRESSURE_CODINGS = [\n  {\n    system: SNOMED_URI,\n    code: \"163035008\",\n  },\n  {\n    system: \"http://loinc.org\",\n    code: \"55284-4\",\n  },\n  {\n    system: \"http://loinc.org\",\n    code: \"85354-9\",\n  },\n];\n\nconst SMOKER_CODINGS = [\n  {\n    system: \"http://loinc.org\",\n    code: \"72166-2\",\n  },\n];\nconst NON_SMOKER_CODES = [\"8392000\", \"LA18978-9\"];\nconst STOPPED_SMOKING_CODES = [\"160617001\", \"8517006\", \"LA15920-4\"];\nconst CURRENT_SMOKER_CODES = [\n  \"77176002\",\n  \"LA18976-3\",\n  \"LA18977-1\",\n  \"LA18981-3\",\n  \"LA18982-1\",\n];\n\nexport const CVDParamsContext = createContext<Promise<PrefilledParams> | null>(\n  null\n);\n\nexport default function ParamsProvider(props: Props) {\n  const { client } = props,\n    sourceData = useMemo(() => getSourceData(client), []),\n    params = sourceData.then((data) => extractParams(data));\n\n  return (\n    <CVDParamsContext.Provider value={params}>\n      {props.children}\n    </CVDParamsContext.Provider>\n  );\n}\n\nasync function getSourceData(client: Client): Promise<SourceData> {\n  const patient = await getPatient(client);\n  return {\n    patient: patient,\n    cholesterol: await getCholesterol(client, patient),\n    bloodPressure: await getBloodPressure(client, patient),\n    history: await getHistory(client, patient),\n    familyHistory: await getFamilyHistory(client, patient),\n    smoker: await getSmoker(client, patient),\n  };\n}\n\nasync function getPatient(client: Client): Promise<IPatient> {\n  return await client.patient.read();\n}\n\nasync function getCholesterol(\n  client: Client,\n  patient: IPatient\n): Promise<IObservation[]> {\n  const bundle = await client.request<IBundle>(\n    `/Observation?_sort=-date&patient=${patient.id}&_count=2&` +\n      \"code=http%3A%2F%2Floinc.org%7C\" +\n      TOTAL_CHOLESTEROL_LOINC_CODE +\n      \",http%3A%2F%2Floinc.org%7C\" +\n      HDL_LOINC_CODE\n  );\n  return bundle.entry\n    ? bundle.entry\n        .filter((entry) => entry.resource)\n        .map((entry) => entry.resource as IObservation)\n    : [];\n}\n\nasync function getBloodPressure(\n  client: Client,\n  patient: IPatient\n): Promise<IObservation[]> {\n  const codeCondition = BLOOD_PRESSURE_CODINGS.map(\n      (coding) => `${coding.system}|${coding.code}`\n    ).join(\",\"),\n    bundle = await client.request<IBundle>(\n      `/Observation?_sort=-date&patient=${patient.id}&_count=1&code=` +\n        codeCondition\n    );\n  return bundle.entry\n    ? bundle.entry\n        .filter((entry) => entry.resource)\n        .map((entry) => entry.resource as IObservation)\n    : [];\n}\n\nasync function getHistory(\n  client: Client,\n  patient: IPatient\n): Promise<ICondition[]> {\n  const bundle = await client.request<IBundle>(\n    `/Condition?patient=${patient.id}`\n  );\n  return bundle.entry\n    ? bundle.entry\n        .filter((entry) => entry.resource)\n        .map((entry) => entry.resource as ICondition)\n    : [];\n}\n\nasync function getFamilyHistory(\n  client: Client,\n  patient: IPatient\n): Promise<IFamilyMemberHistory[]> {\n  const bundle = await client.request<IBundle>(\n    `/FamilyMemberHistory?patient=${patient.id}`\n  );\n  return bundle.entry\n    ? bundle.entry\n        .filter((entry) => entry.resource)\n        .map((entry) => entry.resource as IFamilyMemberHistory)\n    : [];\n}\n\nasync function getSmoker(\n  client: Client,\n  patient: IPatient\n): Promise<IObservation[]> {\n  const codeCondition = SMOKER_CODINGS.map(\n      (coding) => `${coding.system}|${coding.code}`\n    ).join(\",\"),\n    bundle = await client.request<IBundle>(\n      `/Observation?_sort=-date&patient=${patient.id}&_count=1&code=` +\n        codeCondition\n    );\n  return bundle.entry\n    ? bundle.entry\n        .filter((entry) => entry.resource)\n        .map((entry) => entry.resource as IObservation)\n    : [];\n}\n\nasync function extractParams(sourceData: SourceData): Promise<PrefilledParams> {\n  let tcHdlData = tcHdl(sourceData.cholesterol);\n  return {\n    birthSex: birthSex(sourceData.patient),\n    age: age(sourceData.patient),\n    ...tcHdlData,\n    systolicBP: systolicBP(sourceData.bloodPressure),\n    diabetes: await historyInValueSet(\n      sourceData.history,\n      DIABETES_VALUE_SET_URI\n    ),\n    familyHistory: await familyHistoryInValueSet(\n      sourceData.familyHistory,\n      CARDIOVASCULAR_VALUE_SET_URI\n    ),\n    af: await historyInValueSet(sourceData.history, AF_VALUE_SET_URI),\n    smoker: smoker(sourceData.smoker),\n  };\n}\n\nfunction birthSex(patient: IPatient): string | null {\n  if (!patient.extension) {\n    return null;\n  }\n  const extensions = patient.extension.filter((e) => e.url === BIRTH_SEX_URL);\n  let birthSex;\n  if (extensions.length > 0) {\n    birthSex = extensions[0].valueCode ?? null;\n  }\n  if (birthSex) {\n    return birthSex;\n  } else {\n    if (!patient.gender) {\n      return null;\n    } else if (patient.gender === PatientGenderKind._female) {\n      return \"248152002\";\n    } else if (patient.gender === PatientGenderKind._male) {\n      return \"248153007\";\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction age(patient: IPatient): number {\n  return moment().diff(patient.birthDate, \"years\");\n}\n\nfunction tcHdl(\n  cholesterol: IObservation[]\n): { hdl: number; totalCholesterol: number } | null {\n  if (cholesterol.length !== 2) {\n    return null;\n  }\n  const total = cholesterol[0],\n    hdl = cholesterol[1];\n  if (\n    !total.effectiveDateTime ||\n    !hdl.effectiveDateTime ||\n    total.effectiveDateTime !== hdl.effectiveDateTime\n  ) {\n    return null;\n  }\n  const totalValue = total.valueQuantity?.value,\n    totalUnits = total.valueQuantity?.unit,\n    hdlValue = hdl.valueQuantity?.value,\n    hdlUnits = hdl.valueQuantity?.unit;\n  if (\n    !totalValue ||\n    !hdlValue ||\n    !totalUnits ||\n    !hdlUnits ||\n    totalUnits !== hdlUnits\n  ) {\n    return null;\n  }\n  return { hdl: hdlValue, totalCholesterol: totalValue };\n}\n\nfunction systolicBP(bloodPressure: IObservation[]): number | null {\n  if (bloodPressure.length !== 1) {\n    return null;\n  }\n  const bpObservation = bloodPressure[0],\n    systolicComponent = bpObservation.component?.find((component) => {\n      const coding = component.code?.coding;\n      if (!coding) {\n        return false;\n      }\n      const validCoding = coding.find(\n        (c) =>\n          (c.system === \"http://loinc.org\" && c.code === \"8459-0\") ||\n          (c.system === \"http://loinc.org\" && c.code === \"8480-6\")\n      );\n      const correctUnit = component.valueQuantity?.unit === \"mmHg\";\n      return validCoding && correctUnit;\n    });\n  return systolicComponent?.valueQuantity?.value ?? null;\n}\n\nasync function historyInValueSet(\n  history: ICondition[],\n  valueSetUri: string\n): Promise<boolean> {\n  const txClient = new TerminologyClient(TX_ENDPOINT),\n    diabetesCodings = await txClient.expandValueSet(valueSetUri);\n\n  return history.some((condition) => {\n    const coding = condition.code?.coding;\n    if (!coding) {\n      return false;\n    }\n    return !!coding.find((c) =>\n      diabetesCodings.find((dc) => dc.system === c.system && dc.code === c.code)\n    );\n  });\n}\n\nasync function familyHistoryInValueSet(\n  familyHistory: IFamilyMemberHistory[],\n  valueSetUri: string\n): Promise<boolean> {\n  const txClient = new TerminologyClient(TX_ENDPOINT),\n    validCodings = await txClient.expandValueSet(valueSetUri);\n\n  return familyHistory.some((familyHistory) => {\n    const conditions = familyHistory.condition;\n    if (!conditions) {\n      return false;\n    }\n    return !!conditions.find((condition) => {\n      if (!condition.code.coding) {\n        return false;\n      }\n      return condition.code.coding.find((conditionCoding) =>\n        validCodings.find(\n          (c) =>\n            c.system === conditionCoding.system &&\n            c.code === conditionCoding.code\n        )\n      );\n    });\n  });\n}\n\nfunction smoker(smokerStatus: IObservation[]): string | null {\n  if (smokerStatus.length !== 1) {\n    return null;\n  }\n  const smokerObservation = smokerStatus[0];\n\n  const coding = smokerObservation.valueCodeableConcept?.coding?.find(\n    (c) =>\n      (c.system === \"http://loinc.org\" ||\n        c.system === \"http://snomed.info/sct\") &&\n      c.code\n  );\n  const code = coding?.code ?? \"\";\n\n  if (NON_SMOKER_CODES.includes(code)) {\n    return \"8392000\";\n  }\n  if (STOPPED_SMOKING_CODES.includes(code)) {\n    return \"160617001\";\n  }\n  if (CURRENT_SMOKER_CODES.includes(code)) {\n    return \"77176002\";\n  }\n  return null;\n}\n","import {MenuItem} from \"@mui/material\";\nimport * as React from \"react\";\n\ninterface ICVDEthnicityCoefficients {\n  maori: number;\n  pacific: number;\n  indian: number;\n  asian: number;\n}\n\ninterface ICVDCoefficients {\n  baseSurvival: number;\n  ageMean: number;\n  nzdMean: number;\n  sbpMean: number;\n  tcHdlMean: number;\n  cAge: number;\n  cEthnicity: ICVDEthnicityCoefficients;\n  cNZDep: number;\n  cExSmoker: number;\n  cSmoker: number;\n  cFamilyHist: number;\n  cAF: number;\n  cDiabetes: number;\n  cSBP: number;\n  cTcHdl: number;\n  cOBPLM: number;\n  cOLLM: number;\n  cOATM: number;\n  cAgeDiabetes: number;\n  cAgeSBP: number;\n  cObplmSBP: number;\n}\n\nconst maleCoefficients: ICVDCoefficients = {\n  baseSurvival: 0.974755526232,\n  ageMean: 51.79953,\n  nzdMean: 2.97293,\n  sbpMean: 129.1095,\n  tcHdlMean: 4.38906,\n  cAge: 0.0675532,\n  cEthnicity: {\n    maori: 0.2899054,\n    pacific: 0.1774195,\n    indian: 0.2902049,\n    asian: -0.3975687,\n  },\n  cNZDep: 0.0794903,\n  cExSmoker: 0.0753246,\n  cSmoker: 0.5058041,\n  cFamilyHist: 0.1326587,\n  cAF: 0.5880131,\n  cDiabetes: 0.5597023,\n  cSBP: 0.0163778,\n  cTcHdl: 0.1283758,\n  cOBPLM: 0.2947634,\n  cOLLM: -0.0537314,\n  cOATM: 0.0934141,\n  cAgeDiabetes: -0.020235,\n  cAgeSBP: -0.0004184,\n  cObplmSBP: -0.0053077,\n};\n\nconst femaleCoefficients: ICVDCoefficients = {\n  baseSurvival: 0.983169213058,\n  ageMean: 56.13665,\n  nzdMean: 2.990826,\n  sbpMean: 129.0173,\n  tcHdlMean: 3.726268,\n  cAge: 0.0756412,\n  cEthnicity: {\n    maori: 0.3910183,\n    pacific: 0.2010224,\n    indian: 0.1183427,\n    asian: -0.28551,\n  },\n  cNZDep: 0.1080795,\n  cExSmoker: 0.087476,\n  cSmoker: 0.6226384,\n  cFamilyHist: 0.0445534,\n  cAF: 0.8927126,\n  cDiabetes: 0.5447632,\n  cSBP: 0.0136606,\n  cTcHdl: 0.1226753,\n  cOBPLM: 0.339925,\n  cOLLM: -0.0593798,\n  cOATM: 0.1172496,\n  cAgeDiabetes: -0.0222549,\n  cAgeSBP: -0.0004425,\n  cObplmSBP: -0.004313,\n};\n\nexport interface CVDRiskCalculatorParams {\n  isMale?: boolean;\n  age?: number;\n  ethnicity?: string;\n  tcHdl?: number | null;\n  systolicBP?: number;\n  nzDep?: number;\n  exSmoker?: boolean;\n  smoker?: boolean;\n  familyHistory?: boolean;\n  af?: boolean;\n  diabetes?: boolean;\n  obplm?: boolean;\n  ollm?: boolean;\n  oatm?: boolean;\n};\n\nexport interface NewCVDRiskCalculatorParams {\n  birthSex?: string | null;  // snomed code of birth sex\n  age?: number | null;  // age in years\n  ethnicity?: string | null;\n  totalCholesterol?: number | null;\n  hdl?: number | null;\n  systolicBP?: number | null;\n  nzDep?: number | null;\n  smoker?: string | null; // snomed code of smoking status\n  familyHistory?: boolean;\n  af?: boolean;\n  diabetes?: boolean;\n  obplm?: boolean;\n  ollm?: boolean;\n  oatm?: boolean;\n}\n\n\nconst NewCalculator = (\n    {\n      birthSex,\n      age,\n      ethnicity,\n      totalCholesterol,\n      hdl,\n      systolicBP,\n      nzDep,\n      smoker,\n      familyHistory,\n      af,\n      diabetes,\n      obplm,\n      ollm,\n      oatm,\n    } : NewCVDRiskCalculatorParams\n) : number | null => {\n  const coeff = \"248153007\" === birthSex ? maleCoefficients : \"248152002\" === birthSex ? femaleCoefficients : null;\n  if ( coeff === null){\n    return null;\n  }\n\n  const tcHdl = (totalCholesterol && hdl) ?  totalCholesterol / hdl : undefined;\n  // use means to normalise values\n  const tcHdlOffset = tcHdl !== undefined ? tcHdl - coeff.tcHdlMean : undefined;\n\n  const ageOffset =\n      age !== undefined && age !== null\n          ? Math.max(age, 35.0) - coeff.ageMean\n          : undefined;\n  const nzDepOffset =\n      nzDep !== undefined && nzDep !== null ? nzDep - coeff.nzdMean : undefined;\n  const sbpOffset =\n      systolicBP !== undefined && systolicBP !== null\n          ? systolicBP - coeff.sbpMean\n          : undefined;\n\n  // work out the sum of coefiicients\n  let sumOfCoeffs = 0.0;\n\n  if (ageOffset !== undefined) {\n    sumOfCoeffs += coeff.cAge * ageOffset;\n  }\n  if (nzDepOffset !== undefined) {\n    sumOfCoeffs += coeff.cNZDep * nzDepOffset;\n  }\n  if (sbpOffset !== undefined) {\n    sumOfCoeffs += coeff.cSBP * sbpOffset;\n    if (ageOffset !== undefined) {\n      sumOfCoeffs += coeff.cAgeSBP * ageOffset * sbpOffset;\n    }\n  }\n  if (tcHdlOffset !== undefined) {\n    sumOfCoeffs += coeff.cTcHdl * tcHdlOffset;\n  }\n  // can't be smoker and ex-smoker\n  if (\"77176002\" === smoker) {\n    sumOfCoeffs += coeff.cSmoker;\n  } else if (\"160617001\" === smoker) {\n    sumOfCoeffs += coeff.cExSmoker;\n  }\n  if (diabetes) {\n    sumOfCoeffs += coeff.cDiabetes;\n    if (ageOffset !== undefined) {\n      sumOfCoeffs += coeff.cAgeDiabetes * ageOffset;\n    }\n  }\n  if (obplm) {\n    sumOfCoeffs += coeff.cOBPLM;\n    if (sbpOffset !== undefined) {\n      sumOfCoeffs += coeff.cObplmSBP * sbpOffset;\n    }\n  }\n  if (ollm) {\n    sumOfCoeffs += coeff.cOLLM;\n  }\n  if (oatm) {\n    sumOfCoeffs += coeff.cOATM;\n  }\n  if (familyHistory) {\n    sumOfCoeffs += coeff.cFamilyHist;\n  }\n  if (af) {\n    sumOfCoeffs += coeff.cAF;\n  }\n\n  if (ethnicity && ethnicity in coeff.cEthnicity) {\n    sumOfCoeffs +=\n        coeff.cEthnicity[ethnicity as keyof ICVDEthnicityCoefficients];\n  }\n  return (1.0 - Math.pow(coeff.baseSurvival, Math.exp(sumOfCoeffs))) * 100.0;\n\n}\n\n\nconst Calculator = (\n  {\n    isMale,\n    age,\n    ethnicity,\n    tcHdl,\n    systolicBP,\n    nzDep,\n    exSmoker,\n    smoker,\n    familyHistory,\n    af,\n    diabetes,\n    obplm,\n    ollm,\n    oatm,\n  }: CVDRiskCalculatorParams\n): number => {\n  const coeff = isMale ? maleCoefficients : femaleCoefficients;\n\n  // use means to normalise values\n  const tcHdlOffset =\n    tcHdl !== undefined && tcHdl !== null ? tcHdl - coeff.tcHdlMean : undefined;\n\n  const ageOffset =\n    age !== undefined && age !== null\n      ? Math.max(age, 35.0) - coeff.ageMean\n      : undefined;\n  const nzDepOffset =\n    nzDep !== undefined && nzDep !== null ? nzDep - coeff.nzdMean : undefined;\n  const sbpOffset =\n    systolicBP !== undefined && systolicBP !== null\n      ? systolicBP - coeff.sbpMean\n      : undefined;\n\n  // work out the sum of coefiicients\n  let sumOfCoeffs = 0;\n\n  if (ageOffset !== undefined) {\n    sumOfCoeffs += coeff.cAge * ageOffset;\n  }\n  if (nzDepOffset !== undefined) {\n    sumOfCoeffs += coeff.cNZDep * nzDepOffset;\n  }\n  if (sbpOffset !== undefined) {\n    sumOfCoeffs += coeff.cSBP * sbpOffset;\n    if (ageOffset !== undefined) {\n      sumOfCoeffs += coeff.cAgeSBP * ageOffset * sbpOffset;\n    }\n  }\n  if (tcHdlOffset !== undefined) {\n    sumOfCoeffs += coeff.cTcHdl * tcHdlOffset;\n  }\n  // can't be smoker and ex-smoker\n  if (smoker) {\n    sumOfCoeffs += coeff.cSmoker;\n  } else if (exSmoker) {\n    sumOfCoeffs += coeff.cExSmoker;\n  }\n  if (diabetes) {\n    sumOfCoeffs += coeff.cDiabetes;\n    if (ageOffset !== undefined) {\n      sumOfCoeffs += coeff.cAgeDiabetes * ageOffset;\n    }\n  }\n  if (obplm) {\n    sumOfCoeffs += coeff.cOBPLM;\n    if (sbpOffset !== undefined) {\n      sumOfCoeffs += coeff.cObplmSBP * sbpOffset;\n    }\n  }\n  if (ollm) {\n    sumOfCoeffs += coeff.cOLLM;\n  }\n  if (oatm) {\n    sumOfCoeffs += coeff.cOATM;\n  }\n  if (familyHistory) {\n    sumOfCoeffs += coeff.cFamilyHist;\n  }\n  if (af) {\n    sumOfCoeffs += coeff.cAF;\n  }\n\n  if (ethnicity && ethnicity in coeff.cEthnicity) {\n    sumOfCoeffs +=\n      coeff.cEthnicity[ethnicity as keyof ICVDEthnicityCoefficients];\n  }\n  return (1.0 - Math.pow(coeff.baseSurvival, Math.exp(sumOfCoeffs))) * 100.0;\n};\n\nexport default NewCalculator;\n","import { Button, Card, Stack } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\nimport NewCalculator, { NewCVDRiskCalculatorParams } from \"./Calculator\";\nimport { Save } from \"@mui/icons-material\";\nimport Client from \"fhirclient/lib/Client\";\nimport {\n  IObservation,\n  ObservationStatusKind,\n} from \"@ahryman40k/ts-fhir-types/lib/R4\";\n\ninterface Props {\n  params: NewCVDRiskCalculatorParams;\n  client: Client;\n}\n\nexport default function Result(props: Props) {\n  const { params, client } = props,\n    result = NewCalculator(params),\n    formatted = result\n      ? Intl.NumberFormat(\"en\", {\n          useGrouping: false,\n          maximumFractionDigits: 1,\n        }).format(result)\n      : \"\";\n\n  const handleRecord = () => {\n    if (result === null) {\n      return;\n    }\n    const observation: IObservation = {\n      resourceType: \"Observation\",\n      status: ObservationStatusKind._final,\n      code: {\n        coding: [\n          {\n            system: \"http://snomed.info/sct\",\n            code: \"827181004\",\n            display: \"Risk of cardiovascular disease\",\n          },\n        ],\n      },\n      valueQuantity: {\n        value: result,\n        unit: \"%\",\n      },\n      subject: {\n        reference: \"Patient/\" + client.patient.id,\n      },\n    };\n    client.create(observation as any).catch((e) => console.error(e));\n  };\n\n  return (\n    <Card variant=\"outlined\" sx={{ p: 2 }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Typography variant=\"h6\" component=\"h2\" sx={{ flexGrow: 1 }}>\n          Calculated risk score\n        </Typography>\n        <Typography color=\"primary\" sx={{ textAlign: \"right\" }}>\n          {result ? `${formatted}%` : \"(not enough information)\"}\n        </Typography>\n      </Stack>\n      <Stack direction=\"row\" justifyContent=\"flex-end\" sx={{ mt: 1 }}>\n        <Button variant=\"contained\" startIcon={<Save />} onClick={handleRecord}>\n          Record risk score\n        </Button>\n      </Stack>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { InputLabel, MenuItem, Select, Stack, TextField } from \"@mui/material\";\nimport { PrefilledParams } from \"./ParamsProvider\";\nimport Result from \"./Result\";\nimport Client from \"fhirclient/lib/Client\";\n\ninterface Props {\n  initialParams?: PrefilledParams;\n  client: Client;\n}\n\nexport default function Form(props: Props) {\n  const { initialParams, client } = props,\n    [birthSex, setBirthSex] = useState(initialParams?.birthSex),\n    [age, setAge] = useState(initialParams?.age ?? undefined),\n    [totalCholesterol, setTotalCholesterol] = useState(\n      initialParams?.totalCholesterol ?? undefined\n    ),\n    [hdl, setHdl] = useState(initialParams?.hdl ?? undefined),\n    [systolicBP, setSystolicBP] = useState(\n      initialParams?.systolicBP ?? undefined\n    ),\n    [nzDep, setNzDep] = useState(initialParams?.nzDep ?? undefined),\n    [ethnicity, setEthnicity] = useState(initialParams?.ethnicity ?? undefined),\n    [smoker, setSmoker] = useState(initialParams?.smoker ?? undefined),\n    [familyHistory, setFamilyHistory] = useState(\n      initialParams?.familyHistory ?? undefined\n    ),\n    [af, setAf] = useState(initialParams?.af ?? undefined),\n    [diabetes, setDiabetes] = useState(initialParams?.diabetes ?? undefined),\n    [obplm, setObplm] = useState(initialParams?.obplm ?? undefined),\n    [ollm, setOllm] = useState(initialParams?.ollm ?? undefined),\n    [oatm, setOatm] = useState(initialParams?.oatm ?? undefined);\n\n  return (\n    <Container component=\"form\" maxWidth=\"sm\" sx={{ pb: 8 }}>\n      <Stack spacing={4} sx={{ my: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4 }}>\n          Cardiovascular risk calculator\n        </Typography>\n        <FormControl fullWidth>\n          <InputLabel id=\"birth-sex\">Biological sex at birth</InputLabel>\n          <Select\n            labelId=\"birth-sex\"\n            label=\"Biological sex at birth\"\n            required\n            value={birthSex}\n            onChange={(e) => setBirthSex(e.target.value)}\n            autoFocus\n          >\n            <MenuItem value=\"248152002\">Female</MenuItem>\n            <MenuItem value=\"248153007\">Male</MenuItem>\n            <MenuItem value=\"32570691000036108\">Intersex</MenuItem>\n            <MenuItem value=\"32570681000036106\">Indeterminate sex</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <TextField\n            label=\"Age in years\"\n            type=\"number\"\n            value={age}\n            required\n            onChange={(e) => setAge(parseInt(e.target.value))}\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <InputLabel id=\"ethnicity\">Ethnicity</InputLabel>\n          <Select\n            label=\"ethnicity\"\n            required\n            value={ethnicity}\n            onChange={(e) => setEthnicity(e.target.value)}\n          >\n            <MenuItem value=\"european\">European</MenuItem>\n            <MenuItem value=\"maori\">Maori</MenuItem>\n            <MenuItem value=\"pacific\">Pacific</MenuItem>\n            <MenuItem value=\"indian\">Indian</MenuItem>\n            <MenuItem value=\"asian\">Asian</MenuItem>\n            <MenuItem value=\"other\">Other</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <TextField\n            label=\"HDL (mmol/L)\"\n            type=\"number\"\n            required\n            inputProps={{ min: 0 }}\n            value={hdl}\n            onChange={(e) => setHdl(parseFloat(e.target.value))}\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <TextField\n            label=\"Total cholesterol (mmol/L)\"\n            type=\"number\"\n            required\n            inputProps={{ min: 0 }}\n            value={totalCholesterol}\n            onChange={(e) => setTotalCholesterol(parseFloat(e.target.value))}\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <TextField\n            label=\"Systolic blood pressure (mm Hg)\"\n            type=\"number\"\n            required\n            inputProps={{ min: 0, max: 250 }}\n            value={systolicBP}\n            onChange={(e) => setSystolicBP(parseInt(e.target.value))}\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <TextField\n            label=\"New Zealand Index of Socioeconomic Deprivation score\"\n            type=\"number\"\n            required\n            inputProps={{ min: 0, max: 6 }}\n            value={nzDep}\n            onChange={(e) => setNzDep(parseFloat(e.target.value))}\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <InputLabel id=\"smoking\">Smoking status</InputLabel>\n          <Select\n            labelId=\"smoking\"\n            label=\"Smoking status\"\n            required\n            value={smoker}\n            onChange={(e) => setSmoker(e.target.value)}\n          >\n            <MenuItem value=\"8392000\">Non-smoker</MenuItem>\n            <MenuItem value=\"160617001\">Stopped smoking</MenuItem>\n            <MenuItem value=\"77176002\">Current smoker</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl fullWidth>\n          <FormControlLabel\n            label=\"Family history of cardiovascular disease?\"\n            control={\n              <Switch\n                checked={familyHistory}\n                onChange={(e) => setFamilyHistory(e.target.checked)}\n              />\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <FormControlLabel\n            label=\"History of atrial fibrillation?\"\n            control={\n              <Switch checked={af} onChange={(e) => setAf(e.target.checked)} />\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <FormControlLabel\n            label=\"History of diabetes?\"\n            control={\n              <Switch\n                checked={diabetes}\n                onChange={(e) => setDiabetes(e.target.checked)}\n              />\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <FormControlLabel\n            label=\"Currently taking blood pressure lowering medication?\"\n            control={\n              <Switch\n                checked={obplm}\n                onChange={(e) => setObplm(e.target.checked)}\n              />\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth>\n          <FormControlLabel\n            label=\"Currently taking lipid lowering medication?\"\n            control={\n              <Switch\n                checked={ollm}\n                onChange={(e) => setOllm(e.target.checked)}\n              />\n            }\n          />\n        </FormControl>\n        <FormControl fullWidth sx={{ pb: 2 }}>\n          <FormControlLabel\n            label=\"Currently taking anti-thrombotic medication?\"\n            control={\n              <Switch\n                checked={oatm}\n                onChange={(e) => setOatm(e.target.checked)}\n              />\n            }\n          />\n        </FormControl>\n        <Result\n          client={client}\n          params={{\n            birthSex,\n            age,\n            ethnicity,\n            totalCholesterol,\n            hdl,\n            systolicBP,\n            nzDep,\n            smoker,\n            familyHistory,\n            af,\n            diabetes,\n            obplm,\n            ollm,\n            oatm,\n          }}\n        />\n      </Stack>\n    </Container>\n  );\n}\n","import { useContext } from \"react\";\nimport { CVDParamsContext } from \"./ParamsProvider\";\nimport Form from \"./Form\";\nimport usePromise from \"react-promise-suspense\";\nimport Client from \"fhirclient/lib/Client\";\n\ninterface Props {\n  client: Client;\n}\n\nexport default function PrefetchedForm(props: Props) {\n  const { client } = props,\n    PrefetchedCVDParams = useContext(CVDParamsContext),\n    initialParams = usePromise(() => PrefetchedCVDParams, []);\n\n  return <Form initialParams={initialParams} client={client} />;\n}\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","import { CircularProgress, Container, Stack, Typography } from \"@mui/material\";\n\nexport default function Prefetching() {\n  return (\n    <Container sx={{ py: 6 }}>\n      <Stack spacing={2} alignItems=\"center\">\n        <CircularProgress />\n        <Typography>Pre-filling data from the patient record...</Typography>\n      </Stack>\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport PrefetchedForm from \"./PrefetchedForm\";\nimport theme from \"./theme\";\nimport { oauth2 as SMART } from \"fhirclient\";\nimport ParamsProvider from \"./ParamsProvider\";\nimport Prefetching from \"./Prefetching\";\n\nlet rootElement = document.querySelector(\"#root\");\n\nSMART.init({\n  iss: \"https://www.demo.oridashi.com.au:8102\",\n  redirectUri: \"test.html\",\n  clientId: \"47059543-3654-466b-9c71-495957306af0\",\n  scope:\n    \"launch patient/*.read patient/Observation.write offline_access openid fhirUser\",\n}).then(\n  (client) => {\n    render(\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ParamsProvider client={client}>\n          <React.Suspense fallback={<Prefetching />}>\n            <PrefetchedForm client={client} />\n          </React.Suspense>\n        </ParamsProvider>\n      </ThemeProvider>,\n      rootElement\n    );\n  },\n  (error) => console.error(error)\n);\n"],"sourceRoot":""}